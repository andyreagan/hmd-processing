name: Notebook Test

on:
  workflow_dispatch:  # Allows manual trigger from GitHub UI
  schedule:
    # Run every quarter (first day of Jan, Apr, Jul, Oct)
    - cron: '0 0 1 */3 *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-notebook:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jupyter nbconvert ipykernel altair pandas altair vl-convert-python
        
    - name: Save original parquet
      run: |
        cp all.json all.json.original
        
    - name: Execute notebook
      run: |
        jupyter nbconvert --to notebook --execute *.ipynb --inplace
        
    - name: Validate parquet output
      shell: python
      run: |
        import pandas as pd
        import sys

        # Read the newly generated
        new_df = pd.read_json("all.json")

        # Read the original saved before notebook execution
        ref_df = pd.read_json("all.json.original")

        # Compare dataframes
        if not new_df.equals(ref_df):
            print("❌ File contents have changed!")
            print("\nDifferences found:")
            if new_df.shape != ref_df.shape:
                print(f"Shape mismatch: new {new_df.shape} vs original {ref_df.shape}")
            else:
                diff_mask = ~new_df.equals(ref_df)
                if isinstance(diff_mask, bool):
                    print("All values are different")
                else:
                    changed_cols = diff_mask.any()
                    print("Changed columns:", changed_cols[changed_cols].index.tolist())
            sys.exit(1)
        else:
            print("✅ File contents match reference")